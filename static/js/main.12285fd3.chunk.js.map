{"version":3,"sources":["api.ts","PersonName.tsx","Person.tsx","PeopleTable.tsx","App.tsx","index.tsx"],"names":["getData","a","fetch","then","response","json","people","map","person","index","id","father","fatherName","mother","motherName","born","died","age","sex","century","Math","ceil","slug","PersonName","className","cn","to","name","Person","PeopleTable","searchParams","history","useHistory","useParams","sortBy","get","sortOrder","useState","sortedPeople","setSortedPeople","useEffect","useMemo","sort","b","localeCompare","reverse","table","onClick","set","toLowerCase","push","search","toString","clickHandler","key","toUpperCase","e","pathname","App","setPeople","location","useLocation","URLSearchParams","data","visiblePeople","filter","includes","exact","type","value","placeholder","onChange","target","replace","trim","delete","path","render","from","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.12285fd3.chunk.js","sourcesContent":["const getPeople = () => {\n  return fetch('https://mate-academy.github.io/react_people-table/api/people.json')\n    .then(response => response.json());\n};\n\nexport const getData = async (): Promise<PeopleTable[]> => {\n  const people = await getPeople();\n\n\n  return people.map((person: PeopleTable, index: number) => ({\n    ...person,\n    id: index + 1,\n    father: person.fatherName ? person.fatherName : 'unknown',\n    mother: person.motherName ? person.motherName : 'unknown',\n    born: person.born,\n    died: person.died,\n    age: person.died - person.born,\n    sex: person.sex,\n    century: Math.ceil(person.died / 100),\n    slug: person.slug,\n  }));\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { Link } from 'react-router-dom';\n\ntype Props = {\n  person: PeopleTable;\n};\nexport const PersonName: React.FC<Props> = ({ person }) => {\n  return (\n    <td\n      className={cn({\n        'Person--male': person.sex === 'm',\n        'Person--female': person.sex === 'f',\n      })}\n    >\n      <Link to={`/people/${person.slug}`}>\n        {person.name}\n      </Link>\n    </td>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { PersonName } from './PersonName';\n\ntype Props = {\n  person: PeopleTable;\n};\n\nexport const Person: React.FC<Props> = ({ person }) => {\n  return (\n    <>\n      <td>{person.id}</td>\n      <PersonName person={person} />\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>{person.age}</td>\n      <td className={\n        cn({\n          'Person--male': person.sex === 'm',\n        })\n      }\n      >\n        <Link to={`/people/${person.slug}`}>\n          {person.father}\n        </Link>\n      </td>\n      <td className={\n        cn({\n          'Person--female': person.sex === 'f',\n        })\n      }\n      >\n        <Link to={`/people/${person.slug}`}>\n          {person.mother}\n        </Link>\n      </td>\n      <td>{person.century}</td>\n    </>\n  );\n};\n","import React, {\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport {\n  useHistory,\n  useParams,\n} from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from './Person';\n\ntype Props = {\n  people: PeopleTable[];\n  searchParams: any;\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people, searchParams }) => {\n  const tableHead = ['id', 'name', 'sex', 'born', 'died', 'age', 'father', 'mother', 'century'];\n  const history = useHistory();\n  const { name } = useParams();\n  const sortBy = searchParams.get('sortBy');\n  const sortOrder = searchParams.get('sortOrder');\n  const [sortedPeople, setSortedPeople] = useState<PeopleTable[]>([...people]);\n\n  useEffect(() => {\n    setSortedPeople([...people]);\n  }, [people]);\n\n  useMemo(() => {\n    switch (sortBy) {\n      case 'id':\n      case 'died':\n      case 'born':\n      case 'age':\n      case 'century':\n        sortedPeople.sort((a: any, b: any) => (b[sortBy] - a[sortBy]));\n        break;\n      case 'name':\n      case 'sex':\n      case 'father':\n      case 'mother':\n        sortedPeople.sort((a: any, b: any) => (a[sortBy].localeCompare(b[sortBy])));\n        break;\n      default:\n        break;\n    }\n  }, [sortedPeople, sortBy]);\n\n  useMemo(() => {\n    switch (sortOrder) {\n      case 'desc':\n        sortedPeople.reverse();\n        break;\n      default:\n      //   break;\n    }\n  }, [sortedPeople, sortOrder]);\n\n  const clickHandler = (table: string) => {\n    if (searchParams.get('sortBy') === table && searchParams.get('sortOrder') === 'asc') {\n      searchParams.set('sortOrder', 'desc');\n    } else {\n      searchParams.set('sortOrder', 'asc');\n    }\n\n    searchParams.set('sortBy', table.toLowerCase());\n\n    history.push({\n      search: searchParams.toString(),\n    });\n  };\n\n  const handleChangePath = (e: any) => {\n    history.push({\n      pathname: `/people/${e}`,\n    });\n  };\n\n  return (\n    <>\n      <table className=\"PeopleTable\">\n        <thead>\n          <tr\n            className=\"PeopleTable-head\"\n          >\n            {\n              tableHead.map(table => (\n                <th\n                  onClick={() => clickHandler(table)}\n                  key={table}\n                  className=\"PeopleTable--tabs\"\n                >\n                  {table.toUpperCase()}\n                  {sortBy === table && '*'}\n                </th>\n              ))\n            }\n          </tr>\n        </thead>\n        <tbody>\n          {sortedPeople.map((person) => (\n            <tr\n              key={person.id}\n              className={cn('Person', {\n                'Person--active': person.slug === name,\n              })}\n              onClick={() => handleChangePath(person.slug)}\n            >\n              <Person person={person} />\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import React, { useEffect, useMemo, useState } from 'react';\nimport {\n  NavLink,\n  Switch,\n  Route,\n  Redirect,\n  useHistory,\n  useLocation,\n} from 'react-router-dom';\nimport { getData } from './api';\nimport './App.css';\nimport { PeopleTable } from './PeopleTable';\n\nconst App = () => {\n  const [people, setPeople] = useState<PeopleTable[]>([]);\n\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const search = searchParams.get('query') || '';\n\n  useEffect(() => {\n    getData().then((data) => {\n      setPeople(data);\n    });\n  }, [people]);\n\n  const visiblePeople = useMemo(() => {\n    return people.filter(person => (\n      (person.name + person.father + person.mother).toLowerCase().includes(search.toLowerCase())\n    ));\n  }, [people, search]);\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n\n    searchParams.set('query', value.toLowerCase().replace(' ', '-'));\n\n    if (!(searchParams.get('query') || '').trim()) {\n      searchParams.delete('query');\n    }\n\n    history.push({\n      search: searchParams.toString(),\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <header>\n        {/* <p>{queryFromUrl}</p> */}\n        <ul>\n          <li className=\"header--item\">\n            <NavLink to=\"/\" exact className=\"header--link\">HOME</NavLink>\n          </li>\n          <li className=\"header--item\">\n            <NavLink to=\"/people\" className=\"header--link\">PEOPLE</NavLink>\n          </li>\n        </ul>\n        <input\n          type=\"text\"\n          value={search}\n          placeholder=\"Type to search people\"\n          onChange={handleChange}\n        />\n        <h1 className=\"header--head\">People table</h1>\n      </header>\n\n      <Switch>\n        <Route path=\"/\" exact>\n          <h2 className=\"head--home-page\">HomePage</h2>\n        </Route>\n        <Route\n          path=\"/people/:name?\"\n          render={() => (\n            <PeopleTable\n              people={visiblePeople}\n              searchParams={searchParams}\n            />\n          )}\n        />\n        <Redirect from=\"/home\" to=\"/\" />\n        <Route>\n          <h1>Page not found</h1>\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}