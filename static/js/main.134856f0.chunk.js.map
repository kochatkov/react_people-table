{"version":3,"sources":["api.ts","PersonName.tsx","Person.tsx","PeopleTable.tsx","App.tsx","index.tsx"],"names":["getData","a","fetch","then","response","json","people","map","person","index","id","father","fatherName","mother","motherName","born","died","age","sex","century","Math","ceil","slug","PersonName","className","cn","name","Person","PeopleTable","history","useHistory","useParams","table","key","onClick","url","push","pathname","App","useState","setPeople","useEffect","data","to","exact","length","path","render","from","ReactDOM","document","getElementById"],"mappings":"2RAKaA,EAAO,uCAAG,4BAAAC,EAAA,sEAJdC,MAAM,qEACVC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGR,cACfC,EADe,yBAIdA,EAAOC,KAAI,SAACC,EAAqBC,GAAtB,mBAAC,eACdD,GADa,IAEhBE,GAAID,EAAQ,EACZE,OAAQH,EAAOI,WAAaJ,EAAOI,WAAa,UAChDC,OAAQL,EAAOM,WAAaN,EAAOM,WAAa,UAChDC,KAAMP,EAAOO,KACbC,KAAMR,EAAOQ,KACbC,IAAKT,EAAOQ,KAAOR,EAAOO,KAC1BG,IAAKV,EAAOU,IACZC,QAASC,KAAKC,KAAKb,EAAOQ,KAAO,KACjCM,KAAMd,EAAOc,WAdM,2CAAH,qD,wBCCPC,EAA8B,SAAC,GAAgB,IAAdf,EAAa,EAAbA,OAC5C,OACE,wBACEgB,UAAWC,IAAG,CACZ,eAA+B,MAAfjB,EAAOU,IACvB,iBAAiC,MAAfV,EAAOU,OAG1BV,EAAOkB,OCNDC,EAA0B,SAAC,GAAgB,IAAdnB,EAAa,EAAbA,OACxC,OACE,oCACE,4BAAKA,EAAOE,IACZ,kBAAC,EAAD,CAAYF,OAAQA,IACpB,4BAAKA,EAAOU,KACZ,4BAAKV,EAAOO,MACZ,4BAAKP,EAAOQ,MACZ,4BAAKR,EAAOS,KACZ,wBAAIO,UACFC,IAAG,CACD,eAA+B,MAAfjB,EAAOU,OAIxBV,EAAOG,QAEV,wBAAIa,UACFC,IAAG,CACD,iBAAiC,MAAfjB,EAAOU,OAI1BV,EAAOK,QAEV,4BAAKL,EAAOW,WCxBLS,EAA+B,SAAC,GAAgB,IAAdtB,EAAa,EAAbA,OAEvCuB,EAAUC,cACRJ,EAASK,cAATL,KAQR,OACE,oCACE,2BAAOF,UAAU,eACf,+BACE,wBAAIA,UAAU,oBAdJ,CAAC,KAAM,OAAQ,MAAO,OAAQ,OAAQ,MAAO,SAAU,SAAU,WAgB7DjB,KAAI,SAAAyB,GAAK,OACjB,wBAAIC,IAAKD,EAAOR,UAAU,qBAAqBQ,QAMvD,+BACG1B,EAAOC,KAAI,SAACC,GAAD,OACV,wBACEyB,IAAKzB,EAAOE,GACZc,UAAWC,IAAG,SAAU,CACtB,iBAAkBjB,EAAOc,OAASI,IAEpCQ,QAAS,kBA1BCC,EA0BkB3B,EAAOc,UAzB7CO,EAAQO,KAAK,CACXC,SAAS,WAAD,OAAaF,KAFJ,IAACA,IA4BV,kBAAC,EAAD,CAAQ3B,OAAQA,YCcf8B,EA7CH,WAAO,IAAD,EACYC,mBAAwB,IADpC,mBACTjC,EADS,KACDkC,EADC,KAShB,OANAC,qBAAU,WACRzC,IAAUG,MAAK,SAACuC,GACdF,EAAUE,QAEX,IAGD,yBAAKlB,UAAU,OACb,gCACE,4BACE,wBAAIA,UAAU,gBACZ,kBAAC,IAAD,CAASmB,GAAG,IAAIC,OAAK,EAACpB,UAAU,gBAAhC,SAEF,wBAAIA,UAAU,gBACZ,kBAAC,IAAD,CAASmB,GAAG,UAAUnB,UAAU,gBAAhC,YAGJ,wBAAIA,UAAU,gBAAd,eAEGlB,EAAOuC,SAIZ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIF,OAAK,GACnB,wBAAIpB,UAAU,mBAAd,aAEF,kBAAC,IAAD,CACEsB,KAAK,iBACLC,OAAQ,kBACN,kBAAC,EAAD,CAAazC,OAAQA,OAGzB,kBAAC,IAAD,CAAU0C,KAAK,QAAQL,GAAG,MAC1B,kBAAC,IAAD,KACE,kDC3CVM,IAASF,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFG,SAASC,eAAe,W","file":"static/js/main.134856f0.chunk.js","sourcesContent":["const getPeople = () => {\n  return fetch('https://mate-academy.github.io/react_people-table/api/people.json')\n    .then(response => response.json());\n};\n\nexport const getData = async (): Promise<PeopleTable[]> => {\n  const people = await getPeople();\n\n\n  return people.map((person: PeopleTable, index: number) => ({\n    ...person,\n    id: index + 1,\n    father: person.fatherName ? person.fatherName : 'unknown',\n    mother: person.motherName ? person.motherName : 'unknown',\n    born: person.born,\n    died: person.died,\n    age: person.died - person.born,\n    sex: person.sex,\n    century: Math.ceil(person.died / 100),\n    slug: person.slug,\n  }));\n};\n","import React from 'react';\nimport cn from 'classnames';\n\ntype Props = {\n  person: PeopleTable;\n};\nexport const PersonName: React.FC<Props> = ({ person }) => {\n  return (\n    <td\n      className={cn({\n        'Person--male': person.sex === 'm',\n        'Person--female': person.sex === 'f',\n      })}\n    >\n      {person.name}\n    </td>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { PersonName } from './PersonName';\n\ntype Props = {\n  person: PeopleTable;\n};\n\nexport const Person: React.FC<Props> = ({ person }) => {\n  return (\n    <>\n      <td>{person.id}</td>\n      <PersonName person={person} />\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>{person.age}</td>\n      <td className={\n        cn({\n          'Person--male': person.sex === 'm',\n        })\n      }\n      >\n        {person.father}\n      </td>\n      <td className={\n        cn({\n          'Person--female': person.sex === 'f',\n        })\n      }\n      >\n        {person.mother}\n      </td>\n      <td>{person.century}</td>\n    </>\n  );\n};\n","import React from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from './Person';\n\ntype Props = {\n  people: PeopleTable[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const tableHead = ['ID', 'NAME', 'SEX', 'BORN', 'DIED', 'AGE', 'FATHER', 'MOTHER', 'CENTURY'];\n  const history = useHistory();\n  const { name } = useParams();\n\n  const hangleChange = (url: string) => {\n    history.push({\n      pathname: `/people/${url}`,\n    });\n  };\n\n  return (\n    <>\n      <table className=\"PeopleTable\">\n        <thead>\n          <tr className=\"PeopleTable-head\">\n            {\n              tableHead.map(table => (\n                <td key={table} className=\"PeopleTable--tabs\">{table}</td>\n              ))\n            }\n\n          </tr>\n        </thead>\n        <tbody>\n          {people.map((person) => (\n            <tr\n              key={person.id}\n              className={cn('Person', {\n                'Person--active': person.slug === name,\n              })}\n              onClick={() => hangleChange(person.slug)}\n            >\n              <Person person={person} />\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport {\n  NavLink,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport { getData } from './api';\nimport './App.css';\nimport { PeopleTable } from './PeopleTable';\n\nconst App = () => {\n  const [people, setPeople] = useState<PeopleTable[]>([]);\n\n  useEffect(() => {\n    getData().then((data) => {\n      setPeople(data);\n    });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header>\n        <ul>\n          <li className=\"header--item\">\n            <NavLink to=\"/\" exact className=\"header--link\">HOME</NavLink>\n          </li>\n          <li className=\"header--item\">\n            <NavLink to=\"/people\" className=\"header--link\">PEOPLE</NavLink>\n          </li>\n        </ul>\n        <h1 className=\"header--head\">\nPeople table\n          {people.length}\n        </h1>\n      </header>\n\n      <Switch>\n        <Route path=\"/\" exact>\n          <h2 className=\"head--home-page\">HomePage</h2>\n        </Route>\n        <Route\n          path=\"/people/:name?\"\n          render={() => (\n            <PeopleTable people={people} />\n          )}\n        />\n        <Redirect from=\"/home\" to=\"/\" />\n        <Route>\n          <h1>Page not found</h1>\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}