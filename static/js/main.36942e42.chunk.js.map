{"version":3,"sources":["api.ts","PersonName.tsx","Person.tsx","PeopleTable.tsx","App.tsx","index.tsx"],"names":["getData","a","fetch","then","response","json","people","map","person","index","id","father","fatherName","mother","motherName","born","died","age","sex","century","Math","ceil","slug","PersonName","className","cn","name","Person","PeopleTable","searchParams","history","useHistory","useParams","sortBy","get","useState","sortedPeople","setSortedPeople","useEffect","console","log","useMemo","sort","b","localeCompare","table","onClick","set","reverse","toLowerCase","push","search","toString","clickHandler","key","toUpperCase","e","pathname","App","setPeople","location","useLocation","URLSearchParams","currentQuery","setCurrentQuery","data","updateQuery","useCallback","debounce","value","visiblePeople","filter","includes","to","exact","type","placeholder","onChange","target","trim","delete","path","render","from","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.36942e42.chunk.js","sourcesContent":["const getPeople = () => {\n  return fetch('https://mate-academy.github.io/react_people-table/api/people.json')\n    .then(response => response.json());\n};\n\nexport const getData = async (): Promise<PeopleTable[]> => {\n  const people = await getPeople();\n\n\n  return people.map((person: PeopleTable, index: number) => ({\n    ...person,\n    id: index + 1,\n    father: person.fatherName ? person.fatherName : 'unknown',\n    mother: person.motherName ? person.motherName : 'unknown',\n    born: person.born,\n    died: person.died,\n    age: person.died - person.born,\n    sex: person.sex,\n    century: Math.ceil(person.died / 100),\n    slug: person.slug,\n  }));\n};\n","import React from 'react';\nimport cn from 'classnames';\n\n\ntype Props = {\n  person: PeopleTable;\n};\nexport const PersonName: React.FC<Props> = ({ person }) => {\n  return (\n    <td\n      className={cn({\n        'Person--male': person.sex === 'm',\n        'Person--female': person.sex === 'f',\n      })}\n    >\n        {person.name}\n    </td>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { PersonName } from './PersonName';\n\ntype Props = {\n  person: PeopleTable;\n};\n\nexport const Person: React.FC<Props> = ({ person }) => {\n\n  return (\n    <>\n      <td>{person.id}</td>\n      <PersonName person={person} />\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>{person.age}</td>\n      <td className={\n        cn({\n          'Person--male': person.sex === 'm',\n        })\n      }\n      >\n          {person.father}\n      </td>\n      <td className={\n        cn({\n          'Person--female': person.sex === 'f',\n        })\n      }\n      >\n          {person.mother}\n      </td>\n      <td>{person.century}</td>\n    </>\n  );\n};\n","import React, {\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport {\n  useHistory,\n  useParams,\n} from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from './Person';\n\ntype Props = {\n  people: PeopleTable[];\n  searchParams: any;\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people, searchParams }) => {\n  const tableHead = ['id', 'name', 'sex', 'born', 'died', 'age', 'father', 'mother', 'century'];\n  const history = useHistory();\n  const { name } = useParams();\n  const sortBy = searchParams.get('sortBy');\n  // const sortOrder = searchParams.get('sortOrder');\n  const [sortedPeople, setSortedPeople] = useState<PeopleTable[]>([...people]);\n\n  useEffect(() => {\n    setSortedPeople([...people]);\n  }, [people]);\n\n\n  console.log('dsf')\n\n  useMemo(() => {\n    switch (sortBy) {\n      case 'id':\n      case 'died':\n      case 'born':\n      case 'age':\n      case 'century':\n       sortedPeople.sort((a: any, b: any) => (a[sortBy] - b[sortBy]));\n        break;\n      case 'name':\n      case 'sex':\n      case 'father':\n      case 'mother':\n        sortedPeople.sort((a: any, b: any) => (a[sortBy].localeCompare(b[sortBy])));\n        break;\n      default:\n        break;\n    }\n  }, [sortedPeople, sortBy]);\n\n\n  const clickHandler = (table: string) => {\n    if (searchParams.get('sortBy') === table\n      && searchParams.get('sortOrder') === 'asc') {\n      searchParams.set('sortOrder', 'desc');\n      sortedPeople.reverse();\n    } else {\n      searchParams.set('sortOrder', 'asc');\n      sortedPeople.reverse();\n    }\n\n    searchParams.set('sortBy', table.toLowerCase());\n\n    history.push({\n      search: searchParams.toString(),\n    });\n  };\n\n  const handleChangePath = (e: string) => {\n    history.push({\n      pathname: `/people/${e}`,\n      search: searchParams.toString(),\n    });\n  };\n\n  return (\n    <>\n      <table className=\"PeopleTable\">\n        <thead>\n          <tr\n            className=\"PeopleTable-head\"\n          >\n            {\n              tableHead.map(table => (\n                <th\n                  onClick={() => clickHandler(table)}\n                  key={table}\n                  className=\"PeopleTable--tabs\"\n                >\n                  {table.toUpperCase()}\n                  {sortBy === table && '*'}\n                </th>\n              ))\n            }\n          </tr>\n        </thead>\n        <tbody>\n          {sortedPeople.map((person) => (\n            <tr\n              key={person.id}\n              className={cn('Person', {\n                'Person--active': person.slug === name,\n              })}\n              onClick={() => handleChangePath(person.slug)}\n            >\n              <Person person={person} />\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useState\n} from 'react';\nimport {\n  NavLink,\n  Switch,\n  Route,\n  Redirect,\n  useHistory,\n  useLocation,\n} from 'react-router-dom';\nimport { getData } from './api';\nimport './App.css';\nimport { PeopleTable } from './PeopleTable';\nimport debounce from 'lodash/debounce';\n\nconst App = () => {\n  const [people, setPeople] = useState<PeopleTable[]>([]);\n\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const search = searchParams.get('query') || '';\n  const [currentQuery, setCurrentQuery] = useState(search)\n\n  useEffect(() => {\n    getData().then((data) => {\n      setPeople(data);\n    });\n  }, []);\n\n const updateQuery = useCallback(\n   debounce((value: string) => {\n     history.push({ search: value });\n   }, 500),\n   [],\n );\n\n    const visiblePeople = useMemo(() => {\n    return people.filter(person => (\n      (person.name + person.father + person.mother).toLowerCase().includes(search.toLowerCase())\n    ));\n  }, [people, search]);\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const {value} = e.target;\n    setCurrentQuery(value)\n    searchParams.set('query', value);\n\n    if (!(searchParams.get('query') || '').trim()) {\n      searchParams.delete('query');\n    }\n\n    updateQuery(searchParams.toString());\n  }\n\n  useEffect(() => {\n    setCurrentQuery(search);\n  }, [search]);\n\n\n  return (\n    <div className=\"App\">\n      <header>\n        <ul>\n          <li className=\"header--item\">\n            <NavLink to=\"/\" exact className=\"header--link\">HOME</NavLink>\n          </li>\n          <li className=\"header--item\">\n            <NavLink to=\"/people\" className=\"header--link\">PEOPLE</NavLink>\n          </li>\n        </ul>\n        <input\n          type=\"text\"\n          value={currentQuery}\n          placeholder=\"Type to search people\"\n          onChange={handleChange}\n        />\n        <h1 className=\"header--head\">People table</h1>\n      </header>\n\n      <Switch>\n        <Route path=\"/\" exact>\n          <h2 className=\"head--home-page\">HomePage</h2>\n        </Route>\n        <Route\n          path=\"/people/:name?\"\n          render={() => (\n            <PeopleTable\n              people={visiblePeople}\n              searchParams={searchParams}\n            />\n          )}\n        />\n        <Redirect from=\"/home\" to=\"/\" />\n        <Route>\n          <h1>Page not found</h1>\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}